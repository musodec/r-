#+TITLE: Development Notes
#+AUTHOR: Declan Murphy

* RATIONALE

** Directory Traversal

Unfortunately we have two different implementations
of directory traversal: one for the recursive case
and another for the single-directory case.  Glob
doesn't appear to support recursion (I've tried it
with "**/*~" and the like) whereas to invoke rDir
from walkFunc would trip up the walk by removing
files that were there just a moment ago.

Ultimately perhaps a custom traversal routine may be
better: avoid the above split/duplication of
implementation + avoid the waste of sort in Walk.

** Exit Code

Global exitCode with its own type is a little clunky,
but it does effectively coerce exit values to be
one such ExitCode, for all non-panic termination.
(It also facilitates potential flag bit-wise OR of
multiple exit causes, if ever needed in future.)
The hard error return type of WalkFunc means that
wrapping & unwrapping of errors from walkFunc
would have been necessary for a more functional
approach.  Arguably, this would have been even
more clunky.

** Flag Parsing

The flag usage syntax derives from the go flag standard
library.  This imposes some constraints that differ
from the Gnu Readline library.


* USAGE

r~ [options...] [--] [<dir>]
r~ -h | --help
r~ -V | --Version

<dir> defaults to "."; relative paths will be resolved wrt ".".
Use terminator "--" to indicate directory path begins with hyphen.

options:
  -v --verbose   // synonym for --verbosity=2
  -y --verbosity // int in 0,1,2,3 <-> silent,normal,verbose,debug
  -r --recursive
  -i --interactive
  -k --keep-going

If both --verbose and --verbosity are supplied, then verbosity must be 2.
If either --help or --Version are supplied, then that must be the only opt supplied.
Single or double hyphens OK; no Gnu readline style combining of short form options.


* ToDo LIST

** OPEN Add more tests...!

** TODO Add man, info pages
** TODO Support numbered backup removal and supplied suffix
Perhaps also respect associated env vars;
see Backup Options info page.
** TODO Support return code mode
0=clean 1=dirty=would-remove-file(s) 2=err
** TODO Add example of git hook setup
** TODO Add paranoid mode
Require interactive confirmation if:
*** No file found to match filename without suffix
*** File found to match filename without suffix is of a different type
*** File found to match filename without suffix has substantial diff
** TODO Establish go version requirement
** TODO Test Windows compatability
